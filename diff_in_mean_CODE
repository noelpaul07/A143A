# Load necessary libraries
library(ggplot2)
library(dplyr)
library(readr)

# Step 1: Load the dataset
cat("Loading the dataset...\n")
file_path <- "C:/Users/sachi/Documents/GooglePlayStoreApps.csv" # Update with your file path
data <- read_csv(file_path, show_col_types = FALSE)
cat("File loaded successfully!\n")

# Step 2: Clean and preprocess the data
data <- data %>%
  filter(!is.na(Rating), !is.na(Type), Type %in% c("Free", "Paid")) %>%
  mutate(Type = factor(Type, levels = c("Free", "Paid")))

# Step 3: Create visualizations
cat("Creating visualizations...\n")

# Histogram of Ratings
ratings_hist <- ggplot(data, aes(x = Rating)) +
  geom_histogram(bins = 30, fill = "skyblue", color = "black") +
  labs(
    title = "Distribution of App Ratings",
    x = "Rating",
    y = "Count"
  ) +
  theme_minimal()
print(ratings_hist)

# Boxplot comparing Free vs Paid Apps
ratings_boxplot <- ggplot(data, aes(x = Type, y = Rating, fill = Type)) +
  geom_boxplot() +
  labs(
    title = "Comparison of Ratings: Free vs Paid Apps",
    x = "App Type",
    y = "Rating"
  ) +
  scale_fill_manual(values = c("Free" = "lightblue", "Paid" = "lightgreen")) +
  theme_minimal()
print(ratings_boxplot)

# Step 4: Save the plots
cat("Saving the plots...\n")
ggsave("C:/Users/sachi/Documents/Ratings_Distribution.png", plot = ratings_hist, width = 8, height = 6)
ggsave("C:/Users/sachi/Documents/Ratings_Comparison_Boxplot.png", plot = ratings_boxplot, width = 8, height = 6)
cat("Plots saved successfully!\n")

# Step 5: Perform t-test for statistical analysis
cat("Performing t-test...\n")
t_test_result <- t.test(
  Rating ~ Type,
  data = data,
  var.equal = FALSE
)
print(t_test_result)

cat("Analysis completed!\n")
